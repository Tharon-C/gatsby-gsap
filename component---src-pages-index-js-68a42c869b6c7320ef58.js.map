{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","title","style","marginBottom","href","target","component","className","marginTop","to"],"mappings":"2FAAA,yFAgEeA,UAxDG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,wBAAIC,MAAO,CAAEC,aAAc,QAA3B,iDACA,8CACA,sNACA,6CACA,uBAAGC,KAAK,8BAA8BC,OAAO,SAA7C,sBACA,kBAAC,IAAD,CAAWC,UAAU,MAAMC,UAAU,eAArC,yJAMA,wBAAIL,MAAO,CAAEM,UAAW,SAAxB,iBACA,kBAAC,IAAD,CAAWF,UAAU,MAAMC,UAAU,eAArC,sRAaA,wBAAIL,MAAO,CAAEM,UAAW,SAAxB,0BACA,kBAAC,IAAD,CAAWF,UAAU,MAAMC,UAAU,eAArC,omBAuBA,kBAAC,IAAD,CAAYE,GAAG","file":"component---src-pages-index-js-68a42c869b6c7320ef58.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PrismCode from 'react-prism'\nimport NextButton from '../components/NextButton'\n\n\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1 style={{ marginBottom: \"8px\" }}>Using GSAP with Gatsby and Styled Components!</h1>\n    <h2>Part one of...</h2>\n    <p>Today we are looking at what GSAP (Green Sock Animation Plugin) is how to use it with React, specifically Gatsby, and some basic concepts for getting started with your own animations.</p>\n    <h3>What is GSAP?</h3>\n    <a href=\"https://greensock.com/gsap/\" target=\"blank\">Green Sock Website</a>\n    <PrismCode component=\"pre\" className=\"language-js\">\n      {`\n        const myElement = document.getElementById(\"my-element\");\n        TweenLite.to(myElement, 1, {width: 100, backgroundColor: \"red\"});\n      `}\n    </PrismCode>\n    <h3 style={{ marginTop: '50px' }}>The React Way</h3>\n    <PrismCode component=\"pre\" className=\"language-js\">\n      {`\n        class MyComponent extends Component {\n          componentDidMount(){\n            TweenLite.to(this.myElement, 1, {x: 100, y: 100});\n          }\n\n          render(){\n            return <div ref={div => this.myElement = div} />;\n          }\n        }\n      `}\n    </PrismCode>\n    <h3 style={{ marginTop: '50px' }}>Controlling Animations</h3>\n    <PrismCode component=\"pre\" className=\"language-js\">\n      {`\n        class MyComponent extends Component {\n          constructor(props){\n            super(props);\n            // reference to the DOM node\n            this.myElement = null;\n            // reference to the animation\n            this.myTween = new TimelineLite({paused: true});\n          }\n\n          componentDidMount(){\n            this.myTween\n              .to(this.myElement, 0.5, {x: 100})\n              .to(this.myElement, 0.5, {y: 100, rotation: 180});\n          }\n\n          render(){\n            return <div ref={div => this.myElement = div} />;\n          }\n        }\n      `}\n    </PrismCode>\n    <NextButton to=\"/first-example/\" />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}